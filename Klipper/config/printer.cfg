# This file contains pin mappings for the stock 2022 Creality Ender 3
# S1 Plus. To use this config check the STM32 Chip on the Mainboard,
# during "make menuconfig" select accordingly either the
# STM32F103 with "28KiB bootloader" or the STM32F401 with
# "64KiB bootloader" and serial (on USART1 PA10/PA9) for both.

# For a direct serial connection, in "make menuconfig" select
# "Enable extra low-level configuration options" and  Serial
# (on USART2 PA3/PA2), which is on the 10 pin IDC cable used
# for the LCD module as follows: 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The filename
# must be changed to "firmware.bin"

# With STM32F401, you might need to put "firmware.bin" in a
# folder on the SD card called "STM32F4_UPDATE" in order to flash.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA5
position_endstop: -10
position_max: 316
position_min: -15
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: !PA6
position_endstop: -10
position_max: 304
position_min: -15
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 300
position_min: -4

[extruder]
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
gear_ratio: 42:12
rotation_distance: 26.359
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 23.561
#pid_Ki: 1.208
#pid_Kd: 114.859
min_temp: 0
max_temp: 270
#pressure_advance = 0.0625
pressure_advance = 0.033

[heater_bed]
heater_pin: PA7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 71.867
#pid_Ki: 1.536
#pid_Kd: 840.843
min_temp: 0
max_temp: 120

[heater_fan hotend_fan]
pin: PC0

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 34
shaper_freq_y: 31.57

[bltouch]
sensor_pin: ^PC14
control_pin: PC13
x_offset: -31.8
y_offset: -40.5
#z_offset: 0
probe_with_touch_mode: true
stow_on_each_sample: false

[bed_mesh]
speed: 120
mesh_min: 20, 20
mesh_max: 283, 263
probe_count: 6,6
algorithm: bicubic

[screws_tilt_adjust]
screw1: 58, 67
screw1_name: front left screw
screw2: 298, 67
screw2_name: front right screw
screw3: 300, 300
screw3_name: rear right screw
screw4: 60, 300
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[safe_z_home]
home_xy_position: 187, 192
speed: 75
z_hop: 10
z_hop_speed: 5
move_to_previous: true

[filament_switch_sensor e0_sensor]
switch_pin: !PC15
pause_on_runout: true
runout_gcode: PAUSE

[pause_resume]
recover_velocity: 25

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[display_status]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
    # Set and wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Pre-heat extruder to 160
    M104 S{EXTRUDER_TEMP}
    # Set GCODE offset
    #SET_GCODE_OFFSET Z=0
    #auto bed leveling create mesh
    G28
    BED_MESH_CALIBRATE
    # Move Z up
    G1 Z10.0 F3000
    # Reset extruder
    G92 E0
    # Set extruder temperature
    #M104 S{EXTRUDER_TEMP}
    # Move Z axis up a little to prevent scratching heat bed
    G1 Z2.0 F3000
    # Move to start position
    G1 X0.1 Y20 Z5.0 F5000.0
    # Wait for Extruder temperature
    M109 S{EXTRUDER_TEMP}
    # Move to start for purge line
    G1 X0.1 Y20 Z0.3 F5000.0
    # Draw 1st line
    G1 X0.1 Y150.0 Z0.3 F1500.0 E15
    # Move to side a little
    G1 X0.4 Y150.0 Z0.3 F5000.0
    # Draw 2nd line
    G1 X0.4 Y20 Z0.3 F1500.0 E30
    # Reset extruder
    G92 E0
    # Move Z up a little
    G1 Z5.0 F3000

[gcode_macro END_PRINT]
gcode:
    G91
    # Retract a bit
    G1 E-2 F2700
    G1 E-2 Z0.2 F2400
    G1 X5 Y5 F3000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Deliver print
    G1 X0 Y220
    # Disable steppers
    M84 X Y E
    # Clear bed mesh
    #BED_MESH_CLEAR
    # Turn off gcode offset
    #SET_GCODE_OFFSET Z=0

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="homeassistant_switch", state="off"
  )}
  {action_call_remote_method(
    "set_device_power", device="exhaust_switch", state="off"
  )}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

#[idle_timeout]
#gcode:
#  M84
#  TURN_OFF_HEATERS
#  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[idle_timeout]
timeout = 1200 #20 Minutes
gcode:
  {% if printer.pause_resume.is_paused %}
  M104 S0
  M117 "Timeout ignored because printer state == paused."
  {% else %}
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60
  M117 ;clear M117 messages
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.389
#*# pid_ki = 1.478
#*# pid_kd = 84.798
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.107
#*# pid_ki = 1.241
#*# pid_kd = 1106.043
#*#
#*# [bltouch]
#*# z_offset = 2.710
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.245000, 0.152500, 0.062500, -0.020000, -0.105000, -0.217500
#*# 	  0.165000, 0.052500, -0.007500, -0.112500, -0.212500, -0.347500
#*# 	  0.142500, 0.070000, 0.045000, -0.037500, -0.150000, -0.300000
#*# 	  0.165000, 0.137500, 0.095000, 0.000000, -0.115000, -0.282500
#*# 	  0.182500, 0.160000, 0.132500, 0.057500, -0.062500, -0.260000
#*# 	  0.235000, 0.195000, 0.197500, 0.132500, 0.017500, -0.170000
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 19.999999999999996
#*# max_x = 283.0
#*# min_y = 20.0
#*# max_y = 263.0
